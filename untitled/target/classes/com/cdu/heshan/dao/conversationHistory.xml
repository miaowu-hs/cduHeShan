<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdu.heshan.dao.ConversationHistoryDAO">

    <!-- ResultMap -->
    <resultMap id="conversationHistoryResultMap" type="com.cdu.heshan.dataobj.ConversationHistoryDO">
        <id column="id" property="id"/>
        <result column="user_input" property="userInput"/>
        <result column="ai_response" property="aiResponse"/>
        <result column="timestamp" property="timestamp"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <!-- Insert -->
    <insert id="add" parameterType="com.cdu.heshan.dataobj.ConversationHistoryDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO conversation_history (user_input, ai_response, timestamp, user_id)
        VALUES(#{userInput}, #{aiResponse}, now(), #{userId})
    </insert>

    <!-- Batch Insert -->
    <insert id="batchAdd" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO conversation_history (user_input, ai_response, timestamp, user_id)
        VALUES
        <foreach collection="list" item="it" index="index" separator=",">
            (#{it.userInput}, #{it.aiResponse}, now(), #{it.userId})
        </foreach>
    </insert>

    <!-- Update -->
    <update id="update" parameterType="com.cdu.heshan.dataobj.ConversationHistoryDO">
        UPDATE conversation_history
        <set>
            <if test="userInput != null">
                user_input = #{userInput},
            </if>
            <if test="aiResponse != null">
                ai_response = #{aiResponse},
            </if>
        </set>
        timestamp = now()
        WHERE id = #{id}
    </update>

    <!-- Delete -->
    <delete id="delete">
        DELETE FROM conversation_history WHERE id = #{id}
    </delete>

    <!-- Select all -->
    <select id="findAll" resultMap="conversationHistoryResultMap">
        SELECT * FROM conversation_history
    </select>

    <!-- Find by ID -->
    <select id="findById" resultMap="conversationHistoryResultMap">
        SELECT * FROM conversation_history WHERE id = #{id}
    </select>

    <!-- Find by UserId -->
    <select id="findByUserId" resultMap="conversationHistoryResultMap">
        SELECT * FROM conversation_history WHERE user_id = #{userId}
    </select>

    <!-- Search with filters -->
    <select id="search" resultMap="conversationHistoryResultMap">
        SELECT * FROM conversation_history
        <where>
            <if test="userInput != null">
                AND user_input LIKE CONCAT('%', #{userInput}, '%')
            </if>
            <if test="aiResponse != null">
                AND ai_response LIKE CONCAT('%', #{aiResponse}, '%')
            </if>
            <if test="startTime != null">
                AND timestamp &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND timestamp &lt;= #{endTime}
            </if>
        </where>
    </select>

    <!-- Find by multiple IDs -->
    <select id="findByIds" resultMap="conversationHistoryResultMap">
        SELECT * FROM conversation_history
        <where>
            id IN
            <foreach item="item" index="index" collection="ids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

</mapper>
